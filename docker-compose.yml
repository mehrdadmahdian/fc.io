services:
  nginx:
    build: 
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: nginx-container
    ports:
      - "80:80"
    environment:
      SERVER_NAME: ${SERVER_NAME}
      API_SERVER_PORT: ${API_SERVER_PORT}
      PUBLIC_UI_SERVER_PORT: ${PUBLIC_UI_SERVER_PORT}
      DASHBOARD_UI_SERVER_PORT: ${DASHBOARD_UI_SERVER_PORT}
      APP_ENV: ${APP_ENV}
    volumes:
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
    depends_on:
      - public-ui
      - dashboard-ui
      - api
    networks:
      - fc-network
  api:
    build: 
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: api-container
    volumes: 
      - ./api/:/var/www/
      - ./docker/api/entrypoint.sh:/var/www/entrypoint.sh:ro
    ports:
      - "127.0.0.1:${API_SERVER_PORT}:${API_SERVER_PORT}"
    environment:
      APP_ENV: ${APP_ENV}
      API_SERVER_PORT: ${API_SERVER_PORT}
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    networks:
      - fc-network
  dashboard-ui:
    build:
      context: .
      dockerfile: docker/dashboard-ui/Dockerfile
      target: ${APP_ENV:-production}
    container_name: dashboard-ui-container
    ports:
      - "${DASHBOARD_UI_SERVER_PORT}:3000"
    depends_on:
      - api
    restart: always
    environment:
      - NODE_ENV=${APP_ENV:-production}
      - REACT_APP_API_BASE_URL=${API_URL}
      - NEXT_PUBLIC_WEBSITE_URL=${SERVER_NAME}
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=true
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=0
    networks:
      - fc-network
  public-ui:
    build:
      context: .
      dockerfile: docker/public-ui/Dockerfile
      target: ${APP_ENV:-production}
    container_name: public-ui-container
    ports:
      - "${PUBLIC_UI_SERVER_PORT}:3000"
    depends_on:
      - api
    environment:
      - NODE_ENV=${APP_ENV:-production}
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_API_URL=${API_URL}
    networks:
      - fc-network
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "127.0.0.1:${REDIS_SERVER_PORT}:6379"
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - fc-network
  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    restart: always
    ports:
      - "127.0.0.1:${MONGODB_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASS}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    volumes:
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - mongo-data:/data/db
    networks:
      - fc-network
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express-container
    restart: always
    ports:
      - "${MONGODB_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASS}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: ${MONGODB_PORT}
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGODB_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGODB_EXPRESS_PASS}
    networks:
      - fc-network
networks:
  fc-network:
    driver: bridge
volumes:
    redis_data:
    mongo-data:
    dashboard_ui_cache: