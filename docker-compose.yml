services:
  nginx:
    build: 
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: nginx-container
    ports:
      - "80:80"
    environment:
      - SERVER_NAME=${SERVER_NAME}
      - UI_SERVER_PORT=${UI_SERVER_PORT}
      - API_SERVER_PORT=${API_SERVER_PORT}
    volumes:
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
    depends_on:
      - ui
      - api
    networks:
      fc-network:
  api:
    build: 
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: api-container
    volumes: 
      - ./api/:/var/www/
      - ./docker/api/entrypoint.sh:/var/www/entrypoint.sh:ro
    ports:
      - "${API_SERVER_PORT}:${API_SERVER_PORT}"
    environment:
      APP_ENV: ${APP_ENV}
      API_SERVER_PORT: ${API_SERVER_PORT}
    depends_on:
      # - db
      - mongodb
    networks:
      fc-network:
  # db:
  #   image: mysql
  #   container_name: db-container
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_API_PASSWORD}
  #     MYSQL_DATABASE: ${MYSQL_API_DATABASE}
  #     MYSQL_USER: ${MYSQL_API_USERNAME}
  #     MYSQL_PASSWORD: ${MYSQL_API_PASSWORD}
  #   ports:
  #     - "${MYSQL_API_PORT}:${MYSQL_API_PORT}"
  #   volumes:
  #     - fc_mysql_data:/var/lib/mysql
  #     - ./docker/db/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
  #     - ./db/my.cnf:/etc/mysql/my.cnf
  #   restart: always
  #   command:
  #     --character-set-server=utf8mb4
  #     --collation-server=utf8mb4_0900_ai_ci
  #   networks:
  #     fc-network:
  ui:
    container_name: ui-container
    build:
      context: .
      dockerfile: ./docker/ui/Dockerfile
      target: ${APP_ENV}
    ports:
      - ${UI_SERVER_PORT}:3000
    stdin_open: true
    tty: true
    volumes: 
      - ./ui:/app
      - node_modules:/app/node_modules
    depends_on:
      - api
    environment:
      - NODE_ENV=${APP_ENV}
    networks:
      fc-network:
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
    networks:
      fc-network:
  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    restart: always
    ports:
      - "${MONGODB_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASS}
    volumes:
      - mongo-data:/data/db
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express-container
    restart: always
    ports:
      - "${MONGODB_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_EXPRESS_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_EXPRESS_PASS}
      ME_CONFIG_MONGODB_SERVER: mongodb
networks:
  fc-network:
    driver: bridge
volumes:
    # fc_mysql_data:
    node_modules:
    redis_data:
    mongo-data: