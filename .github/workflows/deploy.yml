name: Deploy Dockerized App

on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Check for build-related changes on server
        id: check_changes
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            cd /var/www/fc.io
            git fetch origin master
            LAST_DEPLOYED_COMMIT=$(cat deploy/last_deployed_commit || echo "")
            
            if [ -z "$LAST_DEPLOYED_COMMIT" ]; then
              echo "Build-related changes detected (first deployment)."
              echo "build_required=true" >> $GITHUB_ENV
            else
              if git diff --name-only $LAST_DEPLOYED_COMMIT origin/master | grep -E '(docker-compose.yml|^docker/)'; then
                echo "Build-related changes detected."
                echo "build_required=true" >> $GITHUB_ENV
              else
                echo "No build-related changes detected."
                echo "build_required=false" >> $GITHUB_ENV
              fi
            fi
          EOF

      - name: Deploy to server using Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            cd /var/www/fc.io
            git pull --rebase

            if [[ "${{ env.build_required }}" == "true" ]]; then
              echo "Build-related changes detected. Rebuilding containers."
              docker compose down
              docker compose up --build -d
            else
              echo "No build-related changes detected. Starting existing containers."
              docker compose up -d
            fi

            git rev-parse HEAD > deploy/last_deployed_commit
          EOF
